import{_ as n,o as s,c as a,e as t}from"./app-CvP7wor-.js";const e="/blog/assets/classpath获取文件路径-Ba00ZcxS.jpg",p="/blog/assets/classpath获取文件路径-Ba00ZcxS.jpg",c={},o=t(`<h2 id="servletcontext" tabindex="-1"><a class="header-anchor" href="#servletcontext"><span>ServletContext</span></a></h2><blockquote><p>代表当前的项目，每一个项目，有且只有一个 ServletContext 对象；且只有被服务器部署的项目才有 ServletContext 对象。</p></blockquote><h3 id="servletcontext-对象生命周期" tabindex="-1"><a class="header-anchor" href="#servletcontext-对象生命周期"><span>ServletContext 对象生命周期</span></a></h3><blockquote><p>创建：当服务器开启的时候，ServletContext 对象就会被创建出来</p><p>销毁：当服务器关闭的时候或者当前的项目被卸载的时候，ServletContext 对象就会被销毁</p></blockquote><h3 id="获取-servletcontext-对象" tabindex="-1"><a class="header-anchor" href="#获取-servletcontext-对象"><span>获取 ServletContext 对象</span></a></h3><h3 id="servletcontext-对象的作用" tabindex="-1"><a class="header-anchor" href="#servletcontext-对象的作用"><span>ServletContext 对象的作用</span></a></h3><h4 id="_1-获取响应数据文件的-mimi-类型" tabindex="-1"><a class="header-anchor" href="#_1-获取响应数据文件的-mimi-类型"><span>1. 获取响应数据文件的 MIMI 类型</span></a></h4><h4 id="_2-实现数据的共享-转发也可以实现数据共享" tabindex="-1"><a class="header-anchor" href="#_2-实现数据的共享-转发也可以实现数据共享"><span>2. 实现数据的共享(转发也可以实现数据共享)</span></a></h4><blockquote><p>能够实现数据共享，说明他也是一个域对象(Request 域对象)，他管理的域范围是整个项目(当项目启动了，他的空间产生；当项目关闭时，他的空间消失)</p></blockquote><blockquote><h5 id="servletcontext-域对象与-request-域对象的区别" tabindex="-1"><a class="header-anchor" href="#servletcontext-域对象与-request-域对象的区别"><span>ServletContext 域对象与 Request 域对象的区别</span></a></h5><ol><li>都可以实现资源共享；但是 Request 需要转发才能实现；但是 ServletContext 生命周期长，不需要转发；</li><li>ServletContext 生命周期长，也不安全(比如 n 个人都访问淘宝购买东西存放在购物车，购物车的数据如果存放在 ServletContext 里面，那么每个人的数据都成公开的秘密了)，不是所有的时候都要用；</li><li>Request 只有转发才能数据共享，重定向不行；ServletContext 不受转发和重定向的影响，都能实现数据共享。</li></ol></blockquote><table><thead><tr><th>域对象三大方法</th><th>作用</th></tr></thead><tbody><tr><td>setAttribute(String name, Object value)</td><td>设置数据</td></tr><tr><td>getAttribute(String name)</td><td>获取数据</td></tr><tr><td>removeAttribute(String name)</td><td>移除数据</td></tr></tbody></table><h4 id="_3-获取资源的真实路径" tabindex="-1"><a class="header-anchor" href="#_3-获取资源的真实路径"><span>3. 获取资源的真实路径</span></a></h4><h5 id="加载配置文件" tabindex="-1"><a class="header-anchor" href="#加载配置文件"><span>加载配置文件</span></a></h5><ol><li>使用类加载器(相对于当前的 classpath 路径下)</li><li>通过真实路径获取配置文件(相对于当前项目下)</li></ol><h5 id="两种加载配置文件的方式的区别" tabindex="-1"><a class="header-anchor" href="#两种加载配置文件的方式的区别"><span>两种加载配置文件的方式的区别</span></a></h5><ol><li>如果加载的资源在 classpath 路径下，那么推荐使用类加载器方式(实际开发中都在)</li><li>如果加载的资源在项目下，在 classpath 路径外，推荐使用真实路径方式</li></ol><h4 id="_4-获取-web-xml-核心配置文件-中的全局参数" tabindex="-1"><a class="header-anchor" href="#_4-获取-web-xml-核心配置文件-中的全局参数"><span>4. 获取 web.xml(核心配置文件)中的全局参数</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span></span><span class="token class-name">ServletContext</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/demo1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ServletContext</span> sc <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取 ServletContext 对象</span>
    <span class="token comment">// 方式一</span>
    <span class="token class-name">ServletContext</span> sc1 <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 方式二</span>
    <span class="token comment">// this：当前的 Servlet 对象(继承HttpServlet的这个对象)</span>
    <span class="token class-name">ServletContext</span> sc2<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sc1 <span class="token operator">==</span> sc2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true；因为有且只有一个</span>

    <span class="token comment">// 获取MIME类型((随便传入一个文件名，就能知道这个文件是什么类型))</span>
    <span class="token comment">// String mimeType = sc.getMimeType(String fileName); // 文件名</span>

    <span class="token class-name">String</span> m1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getMimeType</span><span class="token punctuation">(</span><span class="token string">&quot;index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// text/html</span>

    <span class="token class-name">String</span> m2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getMimeType</span><span class="token punctuation">(</span><span class="token string">&quot;index.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// image/jpeg</span>

    <span class="token class-name">String</span> m3 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getMimeType</span><span class="token punctuation">(</span><span class="token string">&quot;index.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// text/plain</span>

    <span class="token class-name">String</span> m4 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getMimeType</span><span class="token punctuation">(</span><span class="token string">&quot;index.mp4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// video/mp4</span>

    <span class="token comment">// 数据共享</span>
    <span class="token comment">// 设置数据</span>
    sc<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取数据(再新建的java文件里也同样，这块就写到当前这个类中了)</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> sc<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 张三</span>
    <span class="token comment">// 移除数据</span>
    sc<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取资源的真实路径</span>
    <span class="token comment">// 什么也不传，找的是当前项目的根目录(这个点很重要)</span>
    <span class="token class-name">String</span> realPath <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// D:\\Tomcat\\apache-tomcat-8.5.100\\webapps\\MyWebApp_war\\</span>

    <span class="token comment">// 传递了一个路径，则找到当前项目的根目录下的getOrPost.html</span>
    <span class="token class-name">String</span> realPath1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;/getOrPost.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>realPath1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// D:\\Tomcat\\apache-tomcat-8.5.100\\webapps\\MyWebApp_war\\getOrPost.html</span>

    <span class="token comment">// 胡乱写一个路径，则找到当前项目的根目录下的xxxx</span>
    <span class="token class-name">String</span> realPath2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>realPath2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// D:\\Tomcat\\apache-tomcat-8.5.100\\webapps\\MyWebApp_war\\xxxx</span>

    <span class="token comment">// 通过真实路径获取配置文件</span>
    <span class="token comment">// xxx.properties: 不传是当前项目的根目录，所以xxx.properties要相对根路径添加</span>
    <span class="token class-name">String</span> realPath3 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;xxx.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>realPath3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>realPath3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> username <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//root</span>

    <span class="token comment">// 获取全局参数</span>
    <span class="token class-name">String</span> param_name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>param_name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 张三</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--web.xml--&gt;</span>
<span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee
  http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4.0<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.htm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>default.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>default.htm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>default.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>com.Servlet.ServletDemo01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/bbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>username<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ServlerContent 获取配置文件路径： <img src="`+e+'" alt="ServlerContent获取文件路径"></p><p>classpath 获取配置文件路径： <img src="'+p+'" alt="classpath获取文件路径"></p>',21),l=[o];function i(u,k){return s(),a("div",null,l)}const m=n(c,[["render",i],["__file","ServletContext.html.vue"]]),v=JSON.parse('{"path":"/admin/Java/Java%E8%BF%9B%E9%98%B6/Servlet/ServletContext.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"ServletContext","slug":"servletcontext","link":"#servletcontext","children":[{"level":3,"title":"ServletContext 对象生命周期","slug":"servletcontext-对象生命周期","link":"#servletcontext-对象生命周期","children":[]},{"level":3,"title":"获取 ServletContext 对象","slug":"获取-servletcontext-对象","link":"#获取-servletcontext-对象","children":[]},{"level":3,"title":"ServletContext 对象的作用","slug":"servletcontext-对象的作用","link":"#servletcontext-对象的作用","children":[]}]}],"git":{"updatedTime":1718958762000,"contributors":[{"name":"OnionTin","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"admin/Java/Java进阶/Servlet/ServletContext.md","excerpt":"<h2>ServletContext</h2>\\n<blockquote>\\n<p>代表当前的项目，每一个项目，有且只有一个 ServletContext 对象；且只有被服务器部署的项目才有 ServletContext 对象。</p>\\n</blockquote>\\n<h3>ServletContext 对象生命周期</h3>\\n<blockquote>\\n<p>创建：当服务器开启的时候，ServletContext 对象就会被创建出来</p>\\n<p>销毁：当服务器关闭的时候或者当前的项目被卸载的时候，ServletContext 对象就会被销毁</p>\\n</blockquote>\\n<h3>获取 ServletContext 对象</h3>"}');export{m as comp,v as data};
