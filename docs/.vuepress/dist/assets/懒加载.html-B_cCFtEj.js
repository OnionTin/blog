import{_ as n,o as s,c as a,e as t}from"./app-CilA4iky.js";const p={},e=t(`<h2 id="懒加载" tabindex="-1"><a class="header-anchor" href="#懒加载"><span>懒加载</span></a></h2><p>React 的懒加载是一种性能优化技术，它允许你在应用中按需加载组件，而不是在应用初始化时一次性加载所有资源。这可以减少应用的初始加载时间并提高用户体验。</p><h3 id="如何实现懒加载" tabindex="-1"><a class="header-anchor" href="#如何实现懒加载"><span>如何实现懒加载</span></a></h3><p>在 React 中实现懒加载主要依赖于<code>React.lazy</code>和<code>&lt;Suspense&gt;</code>这两个 API。</p><ol><li><p><strong>使用<code>React.lazy</code></strong>：这是一个用于动态加载组件的高阶函数，它接受一个函数作为参数，该函数使用动态<code>import()</code>语法来加载组件。</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> LazyComponent <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./LazyComponent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>使用<code>&lt;Suspense&gt;</code></strong>：这是一个用于包裹懒加载组件的 React 组件，它允许你指定一个回退 UI，这个 UI 会在懒加载组件加载期间显示。</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LazyComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="懒加载的最佳实践" tabindex="-1"><a class="header-anchor" href="#懒加载的最佳实践"><span>懒加载的最佳实践</span></a></h3><ul><li><strong>合理划分组件</strong>：将应用程序划分为多个小组件，确保每个组件的功能单一，这样可以更容易地实现懒加载。</li><li><strong>使用动态导入</strong>：使用动态<code>import()</code>来加载组件，而不是静态引入，这样可以最大限度地利用懒加载的优势。</li><li><strong>结合路由懒加载</strong>：与路由结合使用懒加载，确保用户访问不同页面时才加载所需的组件。</li><li><strong>处理加载状态和错误</strong>：始终使用<code>&lt;Suspense&gt;</code>和错误边界来处理加载状态和可能的错误，提供良好的用户体验。</li></ul><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li><strong>避免过度使用</strong>：虽然懒加载可以提升性能，但过度使用可能导致应用结构复杂化。</li><li><strong>兼容性</strong>：确保你的构建工具（如 Webpack）支持代码分割。</li></ul><h3 id="实际案例" tabindex="-1"><a class="header-anchor" href="#实际案例"><span>实际案例</span></a></h3><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Suspense <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> LazyComponent <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./LazyComponent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LazyComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，<code>LazyComponent</code>只有在需要时才会被加载，并在<code>Suspense</code>组件内显示。<code>fallback</code>属性用于指定组件加载时显示的内容。</p>`,12),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","懒加载.html.vue"]]),d=JSON.parse(`{"path":"/web/React/React%E6%8F%90%E5%8D%87/%E6%87%92%E5%8A%A0%E8%BD%BD.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"懒加载","slug":"懒加载","link":"#懒加载","children":[{"level":3,"title":"如何实现懒加载","slug":"如何实现懒加载","link":"#如何实现懒加载","children":[]},{"level":3,"title":"懒加载的最佳实践","slug":"懒加载的最佳实践","link":"#懒加载的最佳实践","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"实际案例","slug":"实际案例","link":"#实际案例","children":[]}]}],"git":{"updatedTime":1728487189000,"contributors":[{"name":"OnionTin]","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"web/React/React提升/懒加载.md","excerpt":"<!-- @format -->\\n<h2>懒加载</h2>\\n<p>React 的懒加载是一种性能优化技术，它允许你在应用中按需加载组件，而不是在应用初始化时一次性加载所有资源。这可以减少应用的初始加载时间并提高用户体验。</p>\\n<h3>如何实现懒加载</h3>\\n<p>在 React 中实现懒加载主要依赖于<code>React.lazy</code>和<code>&lt;Suspense&gt;</code>这两个 API。</p>\\n<ol>\\n<li>\\n<p><strong>使用<code>React.lazy</code></strong>：这是一个用于动态加载组件的高阶函数，它接受一个函数作为参数，该函数使用动态<code>import()</code>语法来加载组件。</p>\\n<div class=\\"language-jsx\\" data-ext=\\"jsx\\" data-title=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">const</span> LazyComponent <span class=\\"token operator\\">=</span> React<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">lazy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">import</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./LazyComponent'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div></li>\\n<li>\\n<p><strong>使用<code>&lt;Suspense&gt;</code></strong>：这是一个用于包裹懒加载组件的 React 组件，它允许你指定一个回退 UI，这个 UI 会在懒加载组件加载期间显示。</p>\\n<div class=\\"language-jsx\\" data-ext=\\"jsx\\" data-title=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Suspense</span></span> <span class=\\"token attr-name\\">fallback</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">Loading...</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n  </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">LazyComponent</span></span> <span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token plain-text\\">\\n</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span><span class=\\"token class-name\\">Suspense</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div></li>\\n</ol>"}`);export{k as comp,d as data};
