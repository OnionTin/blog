import{_ as a,r as o,o as n,c,d as i,w as p,b as l,a as e,e as r}from"./app-CvP7wor-.js";const s="/blog/assets/ORM-DbGzzQ59.jpg",d={},m=e("h2",{id:"orm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#orm"},[e("span",null,"ORM")])],-1),b=e("blockquote",null,[e("p",null,"JdbcTemplate 是 Spring 框架中针对 JDBC 的封装，是 JDBC 的工具类，简化代码的书写。"),e("p",null,"基于 ORM 思想的一个小框架。")],-1),h=r('<blockquote><ol><li><p>在实际开发中，往往是数据库中的一张表，会对应 Java 中的一个类；其中，类名和表名一般是一致的，表中的字段和类中的属性名也一般是一致的。</p></li><li><p>因为涉及到关系了，所以底层用的都是反射</p></li></ol></blockquote><p><img src="'+s+'" alt="ORM"></p><h3 id="jdbctemplate-的基本使用步骤" tabindex="-1"><a class="header-anchor" href="#jdbctemplate-的基本使用步骤"><span>JdbcTemplate 的基本使用步骤</span></a></h3><ol><li>导入 jar 包(很多，可能由 5/6 个 jar 包组成，都放在 lib 下)</li><li>创建 JdbcTemplate 对象，依赖于数据源</li><li>将数据库连接池对象，封装到 JdbcTemplate 对象中</li><li>执行数据库 CRUD 操作</li></ol>',4);function _(u,J){const t=o("font");return n(),c("div",null,[m,b,i(t,{color:"red"},{default:p(()=>[l("ORM (Object Relational Mapping)思想：对象关系映射，将对象和数据库表进行映射，操作对象就可以操作数据库表")]),_:1}),l("。"),h])}const O=a(d,[["render",_],["__file","ORM.html.vue"]]),R=JSON.parse('{"path":"/admin/Java/MySql/JdbcTemplate/ORM.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"ORM","slug":"orm","link":"#orm","children":[{"level":3,"title":"JdbcTemplate 的基本使用步骤","slug":"jdbctemplate-的基本使用步骤","link":"#jdbctemplate-的基本使用步骤","children":[]}]}],"git":{"updatedTime":1726219315000,"contributors":[{"name":"OnionTin","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"admin/Java/MySql/JdbcTemplate/ORM.md","excerpt":"<h2>ORM</h2>\\n<blockquote>\\n<p>JdbcTemplate 是 Spring 框架中针对 JDBC 的封装，是 JDBC 的工具类，简化代码的书写。</p>\\n<p>基于 ORM 思想的一个小框架。</p>\\n</blockquote>\\n。<blockquote>\\n<ol>\\n<li>\\n<p>在实际开发中，往往是数据库中的一张表，会对应 Java 中的一个类；其中，类名和表名一般是一致的，表中的字段和类中的属性名也一般是一致的。</p>\\n</li>\\n<li>\\n<p>因为涉及到关系了，所以底层用的都是反射</p>\\n</li>\\n</ol>\\n</blockquote>\\n<p></p>"}');export{O as comp,R as data};
