import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "../app.Bl4XAEYy.mjs";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h2 id="uuid" tabindex="-1"><a class="header-anchor" href="#uuid"><span>UUID</span></a></h2><p>需要导包，在 java.util 包下</p><p>一般不用他的构造</p><h3 id="常见成员方法" tabindex="-1"><a class="header-anchor" href="#常见成员方法"><span>常见成员方法</span></a></h3><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>static UUID randomUUID()</td><td>随机数序列</td></tr><tr><td>String toString()</td><td>转成字符串类型</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> uuid <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 输出结果带-：dcf611f4-80c8-4610-ae94-1df5e9694af9</span>
uuid <span class="token operator">=</span> uuid<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 输出结果不带-：dcf611f480c84610ae941df5e9694af9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("../pages/admin/Java/Java常用Api/UUID.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const UUID_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "UUID.html.vue"]]);
const data = JSON.parse('{"path":"/admin/Java/Java%E5%B8%B8%E7%94%A8Api/UUID.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"UUID","slug":"uuid","link":"#uuid","children":[{"level":3,"title":"常见成员方法","slug":"常见成员方法","link":"#常见成员方法","children":[]}]}],"git":{"updatedTime":1710404435000,"contributors":[{"name":"OnionTin","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"admin/Java/Java常用Api/UUID.md","excerpt":"<h2>UUID</h2>\\n<p>需要导包，在 java.util 包下</p>\\n<p>一般不用他的构造</p>\\n<h3>常见成员方法</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>方法</th>\\n<th>作用</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>static UUID randomUUID()</td>\\n<td>随机数序列</td>\\n</tr>\\n<tr>\\n<td>String toString()</td>\\n<td>转成字符串类型</td>\\n</tr>\\n</tbody>\\n</table>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">String</span> uuid <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">UUID</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">randomUUID</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>uuid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 输出结果带-：dcf611f4-80c8-4610-ae94-1df5e9694af9</span>\\nuuid <span class=\\"token operator\\">=</span> uuid<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replaceAll</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"-\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>uuid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 输出结果不带-：dcf611f480c84610ae941df5e9694af9</span>\\n</code></pre></div>"}');
export {
  UUID_html as comp,
  data
};
