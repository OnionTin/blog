import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "../app.Bl4XAEYy.mjs";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h2 id="声明类型" tabindex="-1"><a class="header-anchor" href="#声明类型"><span>声明类型</span></a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "center" })}">类型</th><th style="${ssrRenderStyle({ "text-align": "center" })}">例子</th><th style="${ssrRenderStyle({ "text-align": "center" })}">描述</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">number</td><td style="${ssrRenderStyle({ "text-align": "center" })}">1, 2, 3, 4</td><td style="${ssrRenderStyle({ "text-align": "center" })}">任意数字</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">string</td><td style="${ssrRenderStyle({ "text-align": "center" })}">&#39;hello&#39;</td><td style="${ssrRenderStyle({ "text-align": "center" })}">任意字符串</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">boolean</td><td style="${ssrRenderStyle({ "text-align": "center" })}">true, false</td><td style="${ssrRenderStyle({ "text-align": "center" })}">布尔值 true 或 false</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">字面量</td><td style="${ssrRenderStyle({ "text-align": "center" })}">其本身</td><td style="${ssrRenderStyle({ "text-align": "center" })}">限制变量的取值只能是字面量</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">any</td><td style="${ssrRenderStyle({ "text-align": "center" })}">any</td><td style="${ssrRenderStyle({ "text-align": "center" })}">任意类型</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">unkown</td><td style="${ssrRenderStyle({ "text-align": "center" })}">unknown</td><td style="${ssrRenderStyle({ "text-align": "center" })}">未知类型，类型安全的 any</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">void</td><td style="${ssrRenderStyle({ "text-align": "center" })}">void</td><td style="${ssrRenderStyle({ "text-align": "center" })}">没有值，或者 undefined</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">array</td><td style="${ssrRenderStyle({ "text-align": "center" })}">[1, 2, 3]</td><td style="${ssrRenderStyle({ "text-align": "center" })}">任意数字数组</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">tuple</td><td style="${ssrRenderStyle({ "text-align": "center" })}">[1, &#39;a&#39;]</td><td style="${ssrRenderStyle({ "text-align": "center" })}">固定长度数组</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">enum</td><td style="${ssrRenderStyle({ "text-align": "center" })}">enum{A,B}</td><td style="${ssrRenderStyle({ "text-align": "center" })}">枚举类型</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">object</td><td style="${ssrRenderStyle({ "text-align": "center" })}">{name:&#39;孙悟空&#39;}</td><td style="${ssrRenderStyle({ "text-align": "center" })}">任意对象</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">null</td><td style="${ssrRenderStyle({ "text-align": "center" })}">null</td><td style="${ssrRenderStyle({ "text-align": "center" })}">只能是 null</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">never</td><td style="${ssrRenderStyle({ "text-align": "center" })}">never</td><td style="${ssrRenderStyle({ "text-align": "center" })}">永不发生</td></tr></tbody></table></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("../pages/web/Ts/常用类型/声明类型.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _____html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "声明类型.html.vue"]]);
const data = JSON.parse(`{"path":"/web/Ts/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%9E%8B/%E5%A3%B0%E6%98%8E%E7%B1%BB%E5%9E%8B.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"声明类型","slug":"声明类型","link":"#声明类型","children":[]}],"git":{"updatedTime":1727255714000,"contributors":[{"name":"OnionTin","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"web/Ts/常用类型/声明类型.md","excerpt":"<h2>声明类型</h2>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">类型</th>\\n<th style=\\"text-align:center\\">例子</th>\\n<th style=\\"text-align:center\\">描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">number</td>\\n<td style=\\"text-align:center\\">1, 2, 3, 4</td>\\n<td style=\\"text-align:center\\">任意数字</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">string</td>\\n<td style=\\"text-align:center\\">'hello'</td>\\n<td style=\\"text-align:center\\">任意字符串</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">boolean</td>\\n<td style=\\"text-align:center\\">true, false</td>\\n<td style=\\"text-align:center\\">布尔值 true 或 false</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">字面量</td>\\n<td style=\\"text-align:center\\">其本身</td>\\n<td style=\\"text-align:center\\">限制变量的取值只能是字面量</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">any</td>\\n<td style=\\"text-align:center\\">any</td>\\n<td style=\\"text-align:center\\">任意类型</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">unkown</td>\\n<td style=\\"text-align:center\\">unknown</td>\\n<td style=\\"text-align:center\\">未知类型，类型安全的 any</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">void</td>\\n<td style=\\"text-align:center\\">void</td>\\n<td style=\\"text-align:center\\">没有值，或者 undefined</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">array</td>\\n<td style=\\"text-align:center\\">[1, 2, 3]</td>\\n<td style=\\"text-align:center\\">任意数字数组</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">tuple</td>\\n<td style=\\"text-align:center\\">[1, 'a']</td>\\n<td style=\\"text-align:center\\">固定长度数组</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">enum</td>\\n<td style=\\"text-align:center\\">enum{A,B}</td>\\n<td style=\\"text-align:center\\">枚举类型</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">object</td>\\n<td style=\\"text-align:center\\">{name:'孙悟空'}</td>\\n<td style=\\"text-align:center\\">任意对象</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">null</td>\\n<td style=\\"text-align:center\\">null</td>\\n<td style=\\"text-align:center\\">只能是 null</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">never</td>\\n<td style=\\"text-align:center\\">never</td>\\n<td style=\\"text-align:center\\">永不发生</td>\\n</tr>\\n</tbody>\\n</table>"}`);
export {
  _____html as comp,
  data
};
