import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "../app.Bl4XAEYy.mjs";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h2 id="enmu-枚举-把所有的可能的情况都列出来" tabindex="-1"><a class="header-anchor" href="#enmu-枚举-把所有的可能的情况都列出来"><span>enmu(枚举: 把所有的可能的情况都列出来)</span></a></h2><blockquote><p>枚举（Enums）是一种特殊的类型，它为一组数值赋予了更加友好的名字。枚举可以被用来定义命名的常数集合，这使得代码更加易读和易于维护。</p></blockquote><h3 id="普通枚举" tabindex="-1"><a class="header-anchor" href="#普通枚举"><span>普通枚举</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>enmu Sex<span class="token punctuation">{</span>
  Male<span class="token punctuation">,</span>   <span class="token comment">// 不写值的话, 自动转成0</span>
  Female <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">// 赋值为1</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> i<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span>  <span class="token builtin">string</span><span class="token punctuation">,</span> sex<span class="token operator">:</span> Sex <span class="token punctuation">}</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;ths&#39;</span><span class="token punctuation">,</span>
  sex<span class="token operator">:</span> Sex<span class="token punctuation">.</span>Male <span class="token comment">// 自动转成0了</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="带字符串值的枚举" tabindex="-1"><a class="header-anchor" href="#带字符串值的枚举"><span>带字符串值的枚举</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red <span class="token operator">=</span> <span class="token string">&quot;FF0000&quot;</span><span class="token punctuation">,</span>
  Green <span class="token operator">=</span> <span class="token string">&quot;00FF00&quot;</span><span class="token punctuation">,</span>
  Blue <span class="token operator">=</span> <span class="token string">&quot;0000FF&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;FF0000&quot;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">[</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="带数字值的枚举" tabindex="-1"><a class="header-anchor" href="#带数字值的枚举"><span>带数字值的枚举</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  Green <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  Blue <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Green<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常数成员和计算成员" tabindex="-1"><a class="header-anchor" href="#常数成员和计算成员"><span>常数成员和计算成员</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red<span class="token punctuation">,</span>
  Green<span class="token punctuation">,</span>
  Blue <span class="token operator">=</span> Color<span class="token punctuation">.</span>Red <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
  DarkRed <span class="token operator">=</span> Color<span class="token punctuation">.</span>Red <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>DarkRed<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="反向映射" tabindex="-1"><a class="header-anchor" href="#反向映射"><span>反向映射</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red <span class="token operator">=</span> <span class="token string">&quot;FF0000&quot;</span><span class="token punctuation">,</span>
  Green <span class="token operator">=</span> <span class="token string">&quot;00FF00&quot;</span><span class="token punctuation">,</span>
  Blue <span class="token operator">=</span> <span class="token string">&quot;0000FF&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">[</span><span class="token string">&quot;FF0000&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Color.Red</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="枚举作为类型" tabindex="-1"><a class="header-anchor" href="#枚举作为类型"><span>枚举作为类型</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> c<span class="token operator">:</span> Color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Green<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="字符串枚举" tabindex="-1"><a class="header-anchor" href="#字符串枚举"><span>字符串枚举</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Status <span class="token punctuation">{</span>
  Pending <span class="token operator">=</span> <span class="token string">&quot;PENDING&quot;</span><span class="token punctuation">,</span>
  Approved <span class="token operator">=</span> <span class="token string">&quot;APPROVED&quot;</span><span class="token punctuation">,</span>
  Rejected <span class="token operator">=</span> <span class="token string">&quot;REJECTED&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">printStatus</span><span class="token punctuation">(</span>status<span class="token operator">:</span> Status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printStatus</span><span class="token punctuation">(</span>Status<span class="token punctuation">.</span>Approved<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;APPROVED&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数字枚举" tabindex="-1"><a class="header-anchor" href="#数字枚举"><span>数字枚举</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> NumberEnum <span class="token punctuation">{</span>
  One<span class="token punctuation">,</span>
  Two<span class="token punctuation">,</span>
  Three<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>NumberEnum<span class="token punctuation">.</span>One<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>NumberEnum<span class="token punctuation">.</span>Two<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>NumberEnum<span class="token punctuation">.</span>Three<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="外部枚举" tabindex="-1"><a class="header-anchor" href="#外部枚举"><span>外部枚举</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// app.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./colors&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// colors.ts</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red <span class="token operator">=</span> <span class="token string">&quot;FF0000&quot;</span><span class="token punctuation">,</span>
  Green <span class="token operator">=</span> <span class="token string">&quot;00FF00&quot;</span><span class="token punctuation">,</span>
  Blue <span class="token operator">=</span> <span class="token string">&quot;0000FF&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;FF0000&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("../pages/web/Ts/常用类型/enum.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const enum_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "enum.html.vue"]]);
const data = JSON.parse(`{"path":"/web/Ts/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%9E%8B/enum.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"enmu(枚举: 把所有的可能的情况都列出来)","slug":"enmu-枚举-把所有的可能的情况都列出来","link":"#enmu-枚举-把所有的可能的情况都列出来","children":[{"level":3,"title":"普通枚举","slug":"普通枚举","link":"#普通枚举","children":[]},{"level":3,"title":"带字符串值的枚举","slug":"带字符串值的枚举","link":"#带字符串值的枚举","children":[]},{"level":3,"title":"带数字值的枚举","slug":"带数字值的枚举","link":"#带数字值的枚举","children":[]},{"level":3,"title":"常数成员和计算成员","slug":"常数成员和计算成员","link":"#常数成员和计算成员","children":[]},{"level":3,"title":"反向映射","slug":"反向映射","link":"#反向映射","children":[]},{"level":3,"title":"枚举作为类型","slug":"枚举作为类型","link":"#枚举作为类型","children":[]},{"level":3,"title":"字符串枚举","slug":"字符串枚举","link":"#字符串枚举","children":[]},{"level":3,"title":"数字枚举","slug":"数字枚举","link":"#数字枚举","children":[]},{"level":3,"title":"外部枚举","slug":"外部枚举","link":"#外部枚举","children":[]}]}],"git":{"updatedTime":1727255714000,"contributors":[{"name":"OnionTin","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"web/Ts/常用类型/enum.md","excerpt":"<h2>enmu(枚举: 把所有的可能的情况都列出来)</h2>\\n<blockquote>\\n<p>枚举（Enums）是一种特殊的类型，它为一组数值赋予了更加友好的名字。枚举可以被用来定义命名的常数集合，这使得代码更加易读和易于维护。</p>\\n</blockquote>\\n<h3>普通枚举</h3>\\n<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code>enmu Sex<span class=\\"token punctuation\\">{</span>\\n  Male<span class=\\"token punctuation\\">,</span>   <span class=\\"token comment\\">// 不写值的话, 自动转成0</span>\\n  Female <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>  <span class=\\"token comment\\">// 赋值为1</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">let</span> i<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> name<span class=\\"token operator\\">:</span>  <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> sex<span class=\\"token operator\\">:</span> Sex <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\ni <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  name<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'ths'</span><span class=\\"token punctuation\\">,</span>\\n  sex<span class=\\"token operator\\">:</span> Sex<span class=\\"token punctuation\\">.</span>Male <span class=\\"token comment\\">// 自动转成0了</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>"}`);
export {
  enum_html as comp,
  data
};
