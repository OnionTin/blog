import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "../app.Bl4XAEYy.mjs";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h2 id="分组" tabindex="-1"><a class="header-anchor" href="#分组"><span>分组</span></a></h2><blockquote><p>select * from 表名 group by 字段;</p><p>注意：</p><ol><li><p>分组之后查询的字段，必须是分组字段，或者是使用聚合函数处理的字段</p></li><li><p>where 和 having 都是条件语句；但 where 在分组前，而 having 在分组后</p></li></ol></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 按照性别分组，每组多少人</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> students <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span>

<span class="token comment">-- 按照年龄分组，查询出每组的人数</span>
<span class="token comment">-- 要求：只显示人数大于2的记录</span>
<span class="token comment">-- 先分组，再筛选</span>
<span class="token keyword">select</span> age<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> students <span class="token keyword">group</span> <span class="token keyword">by</span> age <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 20岁以上的人，按照年龄分组，查询每组的人数</span>
<span class="token comment">-- 要求：只显示人数大于2的记录</span>
<span class="token comment">-- 先筛选，后分组，再筛选</span>
<span class="token keyword">select</span> age<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> age <span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token keyword">group</span> <span class="token keyword">by</span> age <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 按照性别分组，查询出每组的人数</span>
<span class="token comment">-- 要求：只显示人数大于2的记录，并且按照人数降序排序</span>
<span class="token comment">-- 先分组，后筛选</span>
<span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> students <span class="token keyword">group</span> <span class="token keyword">by</span> sex
<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span>

<span class="token comment">-- 筛选出年龄大于18的记录，然后按照性别分组，查询出每组的人数，只展示人数大于2的记录</span>
<span class="token comment">-- 要求：先筛选，后分组，再筛选</span>
<span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> age <span class="token operator">&gt;</span> <span class="token number">18</span> <span class="token keyword">group</span> <span class="token keyword">by</span> sex
<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询学生信息，按照年龄段分组查询，小于 18 的为一组，18-20 为一组，大于 20 的为一组</span>
<span class="token keyword">select</span> age<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">case</span> <span class="token keyword">when</span> age <span class="token operator">&lt;</span> <span class="token number">18</span> <span class="token keyword">then</span> <span class="token string">&#39;小于 18&#39;</span>
<span class="token keyword">when</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token operator">and</span> age <span class="token operator">&lt;=</span> <span class="token number">20</span> <span class="token keyword">then</span> <span class="token string">&#39;18-20&#39;</span>
<span class="token keyword">else</span> <span class="token string">&#39;大于 20&#39;</span> <span class="token keyword">end</span> <span class="token keyword">as</span> 年龄段 <span class="token keyword">from</span> students<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("../pages/admin/Java/MySql/单表查询/分组.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ___html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "分组.html.vue"]]);
const data = JSON.parse(`{"path":"/admin/Java/MySql/%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2/%E5%88%86%E7%BB%84.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"分组","slug":"分组","link":"#分组","children":[]}],"git":{"updatedTime":1726219315000,"contributors":[{"name":"OnionTin","email":"2775376881@qq.com","commits":1}]},"filePathRelative":"admin/Java/MySql/单表查询/分组.md","excerpt":"<h2>分组</h2>\\n<blockquote>\\n<p>select * from 表名 group by 字段;</p>\\n<p>注意：</p>\\n<ol>\\n<li>\\n<p>分组之后查询的字段，必须是分组字段，或者是使用聚合函数处理的字段</p>\\n</li>\\n<li>\\n<p>where 和 having 都是条件语句；但 where 在分组前，而 having 在分组后</p>\\n</li>\\n</ol>\\n</blockquote>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token comment\\">-- 按照性别分组，每组多少人</span>\\n<span class=\\"token keyword\\">select</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">from</span> students <span class=\\"token keyword\\">group</span> <span class=\\"token keyword\\">by</span> sex<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">-- 按照年龄分组，查询出每组的人数</span>\\n<span class=\\"token comment\\">-- 要求：只显示人数大于2的记录</span>\\n<span class=\\"token comment\\">-- 先分组，再筛选</span>\\n<span class=\\"token keyword\\">select</span> age<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">from</span> students <span class=\\"token keyword\\">group</span> <span class=\\"token keyword\\">by</span> age <span class=\\"token keyword\\">having</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">-- 20岁以上的人，按照年龄分组，查询每组的人数</span>\\n<span class=\\"token comment\\">-- 要求：只显示人数大于2的记录</span>\\n<span class=\\"token comment\\">-- 先筛选，后分组，再筛选</span>\\n<span class=\\"token keyword\\">select</span> age<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">from</span> students <span class=\\"token keyword\\">where</span> age <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">20</span> <span class=\\"token keyword\\">group</span> <span class=\\"token keyword\\">by</span> age <span class=\\"token keyword\\">having</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">-- 按照性别分组，查询出每组的人数</span>\\n<span class=\\"token comment\\">-- 要求：只显示人数大于2的记录，并且按照人数降序排序</span>\\n<span class=\\"token comment\\">-- 先分组，后筛选</span>\\n<span class=\\"token keyword\\">select</span> sex<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">from</span> students <span class=\\"token keyword\\">group</span> <span class=\\"token keyword\\">by</span> sex\\n<span class=\\"token keyword\\">having</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span> <span class=\\"token keyword\\">order</span> <span class=\\"token keyword\\">by</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">desc</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">-- 筛选出年龄大于18的记录，然后按照性别分组，查询出每组的人数，只展示人数大于2的记录</span>\\n<span class=\\"token comment\\">-- 要求：先筛选，后分组，再筛选</span>\\n<span class=\\"token keyword\\">select</span> sex<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">from</span> students <span class=\\"token keyword\\">where</span> age <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">18</span> <span class=\\"token keyword\\">group</span> <span class=\\"token keyword\\">by</span> sex\\n<span class=\\"token keyword\\">having</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">-- 查询学生信息，按照年龄段分组查询，小于 18 的为一组，18-20 为一组，大于 20 的为一组</span>\\n<span class=\\"token keyword\\">select</span> age<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">case</span> <span class=\\"token keyword\\">when</span> age <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">18</span> <span class=\\"token keyword\\">then</span> <span class=\\"token string\\">'小于 18'</span>\\n<span class=\\"token keyword\\">when</span> age <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">18</span> <span class=\\"token operator\\">and</span> age <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">20</span> <span class=\\"token keyword\\">then</span> <span class=\\"token string\\">'18-20'</span>\\n<span class=\\"token keyword\\">else</span> <span class=\\"token string\\">'大于 20'</span> <span class=\\"token keyword\\">end</span> <span class=\\"token keyword\\">as</span> 年龄段 <span class=\\"token keyword\\">from</span> students<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}`);
export {
  ___html as comp,
  data
};
