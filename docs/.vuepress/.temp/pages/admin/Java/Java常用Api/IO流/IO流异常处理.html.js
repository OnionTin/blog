import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/admin/Java/Java常用Api/IO流/IO流异常处理.html.vue"
const data = JSON.parse("{\"path\":\"/admin/Java/Java%E5%B8%B8%E7%94%A8Api/IO%E6%B5%81/IO%E6%B5%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"IO 流异常处理\",\"slug\":\"io-流异常处理\",\"link\":\"#io-流异常处理\",\"children\":[]}],\"git\":{\"updatedTime\":1715073877000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"admin/Java/Java常用Api/IO流/IO流异常处理.md\",\"excerpt\":\"<h2>IO 流异常处理</h2>\\n<div class=\\\"language-java\\\" data-ext=\\\"java\\\" data-title=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">package</span> <span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>wuziqi<span class=\\\"token punctuation\\\">.</span>gobang<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token constant\\\">IO</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">FileInputStream</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">FileOutputStream</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">IOException</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">DemoErrorTryCatch</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token class-name\\\">FileInputStream</span> fis <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token class-name\\\">FileOutputStream</span> fos <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">try</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// 创建字节输入流对象</span>\\n            fis <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">FileInputStream</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"aaa/b.txt\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">// 创建字节输出流对象</span>\\n            fos <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">FileOutputStream</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"aaa/a.txt\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">// 一次读取一个字节数组，一次写入一个字节数组的一部分</span>\\n            <span class=\\\"token keyword\\\">byte</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> bys <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">byte</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1024</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">int</span> len <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">while</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token punctuation\\\">(</span>len <span class=\\\"token operator\\\">=</span> fis<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">read</span><span class=\\\"token punctuation\\\">(</span>bys<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!=</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n                fos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>bys<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> len<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token class-name\\\">IOException</span> e <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">printStackTrace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">finally</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// 释放资源</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fos <span class=\\\"token operator\\\">!=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n                    fos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">IOException</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">printStackTrace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fos <span class=\\\"token operator\\\">!=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n                    fos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">IOException</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">printStackTrace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
