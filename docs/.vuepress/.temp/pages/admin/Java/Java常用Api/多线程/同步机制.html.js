import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/admin/Java/Java常用Api/多线程/同步机制.html.vue"
const data = JSON.parse("{\"path\":\"/admin/Java/Java%E5%B8%B8%E7%94%A8Api/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"同步机制\",\"slug\":\"同步机制\",\"link\":\"#同步机制\",\"children\":[{\"level\":3,\"title\":\"方法一(同步代码块)\",\"slug\":\"方法一-同步代码块\",\"link\":\"#方法一-同步代码块\",\"children\":[]},{\"level\":3,\"title\":\"方法二(同步方法)\",\"slug\":\"方法二-同步方法\",\"link\":\"#方法二-同步方法\",\"children\":[]},{\"level\":3,\"title\":\"方法三(静态同步方法)\",\"slug\":\"方法三-静态同步方法\",\"link\":\"#方法三-静态同步方法\",\"children\":[]},{\"level\":3,\"title\":\"方法四(使用 ReentrantLock 锁对象)\",\"slug\":\"方法四-使用-reentrantlock-锁对象\",\"link\":\"#方法四-使用-reentrantlock-锁对象\",\"children\":[]}]}],\"git\":{\"updatedTime\":1718958762000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"admin/Java/Java常用Api/多线程/同步机制.md\",\"excerpt\":\"<h2>同步机制</h2>\\n<blockquote>\\n<p>解决多线程并发访问时出现的问题，使用同步机制，保证同一时刻，只能有一个线程对数据进行操作。</p>\\n</blockquote>\\n<h3>方法一(同步代码块)</h3>\\n<blockquote>\\n<p>什么时候使用同步代码块？(什么时候会出现多线程并发访问问题？)</p>\\n<ol>\\n<li>多线程；</li>\\n<li>有共享资源；</li>\\n<li>有多条语句都操作了共享资源。</li>\\n</ol>\\n<p>锁对象？</p>\\n<ul>\\n<li>同步方法的锁对象 可以是我们传递的任意对象</li>\\n</ul>\\n</blockquote>\\n<div class=\\\"language-java\\\" data-ext=\\\"java\\\" data-title=\\\"java\\\"><pre class=\\\"language-java\\\"><code>格式<span class=\\\"token operator\\\">:</span>\\n<span class=\\\"token keyword\\\">synchronized</span><span class=\\\"token punctuation\\\">(</span>锁对象<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/*\\n  * 锁对象：可以是任意对象(当然，也包括字节码文件对象，所以可以不创建对象，\\n  * 把当前文件字节码文件对象当作锁对象传进去)\\n  * 要求：多个线程必须要共用同一把锁\\n  * 特性：在某一个线程使用时，会被锁上，不受其他线程影响\\n  * 放哪：仅包裹所有操作共享资源的最小代码块，否则可能会出现线程的阻塞\\n  */</span>\\n  <span class=\\\"token comment\\\">// 需要被同步的代码 || 所有操作共享资源的部分的最小代码块</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n案例代码：\\n<span class=\\\"token keyword\\\">package</span> <span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>api<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">DuoXianCheng</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Ticket02</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 三个窗口，即三个线程</span>\\n        <span class=\\\"token class-name\\\">Ticket2</span> ticket <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Ticket2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token class-name\\\">Thread</span> t1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">(</span>ticket<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token class-name\\\">Thread</span> t2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">(</span>ticket<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token class-name\\\">Thread</span> t3 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">(</span>ticket<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        t1<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"窗口1\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        t2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"窗口2\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        t3<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"窗口3\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        t1<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        t2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        t3<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Ticket2</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">Runnable</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">int</span> ticketNum <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token class-name\\\">Object</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Object</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 锁对象：多线程共用</span>\\n    <span class=\\\"token annotation punctuation\\\">@Override</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 售票代码</span>\\n        <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">synchronized</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n              <span class=\\\"token comment\\\">/*\\n               * 如果把while整体都包裹了，就不是最小代码块了；\\n               * 可能会出现当前线程锁资源的问题；\\n               * 其他线程阻塞了\\n              */</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>ticketNum <span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sleep</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">InterruptedException</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                        e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">printStackTrace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span>\\n                      <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">currentThread</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\":出票，票号为：\\\"</span> <span class=\\\"token operator\\\">+</span> ticketNum\\n                    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    ticketNum<span class=\\\"token operator\\\">--</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }
