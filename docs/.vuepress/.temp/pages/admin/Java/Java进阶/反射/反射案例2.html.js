import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/admin/Java/Java进阶/反射/反射案例2.html.vue"
const data = JSON.parse("{\"path\":\"/admin/Java/Java%E8%BF%9B%E9%98%B6/%E5%8F%8D%E5%B0%84/%E5%8F%8D%E5%B0%84%E6%A1%88%E4%BE%8B2.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"反射案例 2\",\"slug\":\"反射案例-2\",\"link\":\"#反射案例-2\",\"children\":[]}],\"git\":{\"updatedTime\":1718958762000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"admin/Java/Java进阶/反射/反射案例2.md\",\"excerpt\":\"<h2>反射案例 2</h2>\\n<blockquote>\\n<p>模拟框架，来实现可以执行我们指定的任意一个类中的任意一个方法(简单点，目前只要空参即可)</p>\\n</blockquote>\\n<div class=\\\"language-java\\\" data-ext=\\\"java\\\" data-title=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token comment\\\">// 思路</span>\\n<span class=\\\"token comment\\\">// 1. 获取字节码文件对象</span>\\n<span class=\\\"token class-name\\\">Class</span> clazz <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">Class</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"???\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ???：className</span>\\n<span class=\\\"token comment\\\">// 2. 创建实例（两种方式）</span>\\n<span class=\\\"token comment\\\">// 创建实例1</span>\\n<span class=\\\"token class-name\\\">Object</span> obj1 <span class=\\\"token operator\\\">=</span> clazz<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">newInstance</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 获取构造器对象</span>\\n<span class=\\\"token class-name\\\">Constructor</span> cons <span class=\\\"token operator\\\">=</span> clazz<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getConstructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 创建实例2</span>\\n<span class=\\\"token class-name\\\">Object</span> obj2 <span class=\\\"token operator\\\">=</span> cons<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">newInstance</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 3. 获取方法对象</span>\\n<span class=\\\"token class-name\\\">Method</span> m <span class=\\\"token operator\\\">=</span> clazz<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"???\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ???：methodName</span>\\n<span class=\\\"token comment\\\">// 4. 调用方法对象</span>\\nm<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">invoke</span><span class=\\\"token punctuation\\\">(</span>obj1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
