import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/admin/Java/MyBatis/MyBatis缓存.html.vue"
const data = JSON.parse("{\"path\":\"/admin/Java/MyBatis/MyBatis%E7%BC%93%E5%AD%98.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"MyBatis 缓存\",\"slug\":\"mybatis-缓存\",\"link\":\"#mybatis-缓存\",\"children\":[{\"level\":3,\"title\":\"一级缓存\",\"slug\":\"一级缓存\",\"link\":\"#一级缓存\",\"children\":[]},{\"level\":3,\"title\":\"二级缓存\",\"slug\":\"二级缓存\",\"link\":\"#二级缓存\",\"children\":[]},{\"level\":3,\"title\":\"一级缓存和二级缓存流程\",\"slug\":\"一级缓存和二级缓存流程\",\"link\":\"#一级缓存和二级缓存流程\",\"children\":[]}]}],\"git\":{\"updatedTime\":1726219315000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"admin/Java/MyBatis/MyBatis缓存.md\",\"excerpt\":\"<h2>MyBatis 缓存</h2>\\n<blockquote>\\n<p>MyBatis 缓存 和 MyBatis 懒加载，都是优化的，缓存可以减少读取数据库的次数，懒加载可以减少内存开销。</p>\\n</blockquote>\\n<h3>一级缓存</h3>\\n<blockquote>\\n<p>默认开启，一级缓存是 SqlSession 级别的缓存，作用域是同一个 SqlSession。</p>\\n</blockquote>\\n<div class=\\\"language-java\\\" data-ext=\\\"java\\\" data-title=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token annotation punctuation\\\">@Test</span>\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">findAll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token class-name\\\">List</span><span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Student</span><span class=\\\"token punctuation\\\">&gt;</span></span> <span class=\\\"token class-name\\\">Students1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">StudentDao</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findAll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token class-name\\\">List</span><span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Student</span><span class=\\\"token punctuation\\\">&gt;</span></span> <span class=\\\"token class-name\\\">Students2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">StudentDao</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findAll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    sqlSession<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">clearCache</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 清除一级缓存</span>\\n    <span class=\\\"token comment\\\">/*\\n     * Students1 == Students2，只执行了一次select，因为是同一个sqlSession\\n     * 查询 Students3，又执行了一次select，因为一级缓存是sqlSession级别\\n    */</span>\\n    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Students1</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token class-name\\\">Students2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// true</span>\\n    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Students2</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token class-name\\\">Students3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// false</span>\\n    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Students1</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token class-name\\\">Students3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// false</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
