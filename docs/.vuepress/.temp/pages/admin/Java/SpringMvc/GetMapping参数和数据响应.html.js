import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/admin/Java/SpringMvc/GetMapping参数和数据响应.html.vue"
const data = JSON.parse("{\"path\":\"/admin/Java/SpringMvc/GetMapping%E5%8F%82%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"GetMapping 参数和数据响应\",\"slug\":\"getmapping-参数和数据响应\",\"link\":\"#getmapping-参数和数据响应\",\"children\":[]}],\"git\":{\"updatedTime\":1723909671000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"admin/Java/SpringMvc/GetMapping参数和数据响应.md\",\"excerpt\":\"<!-- @format -->\\n<h2>GetMapping 参数和数据响应</h2>\\n<div class=\\\"language-java\\\" data-ext=\\\"java\\\" data-title=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token comment\\\">// UserController</span>\\n<span class=\\\"token keyword\\\">package</span> <span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>haha<span class=\\\"token punctuation\\\">.</span>controller</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>haha<span class=\\\"token punctuation\\\">.</span>pojo<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">User</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>stereotype<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Controller</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>ui<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Model</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>ui<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">ModelMap</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>web<span class=\\\"token punctuation\\\">.</span>bind<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">GetMapping</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>web<span class=\\\"token punctuation\\\">.</span>bind<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">RequestMapping</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>web<span class=\\\"token punctuation\\\">.</span>bind<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">RequestParam</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token annotation punctuation\\\">@Controller</span>\\n<span class=\\\"token annotation punctuation\\\">@RequestMapping</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"/user\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UserController</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 前端参数是一个字符串</span>\\n  <span class=\\\"token comment\\\">// localhost:8080/user/t1?name=xxx</span>\\n  <span class=\\\"token annotation punctuation\\\">@GetMapping</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"/t1\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token function\\\">test1</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token annotation punctuation\\\">@RequestParam</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"username\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token class-name\\\">String</span> name<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">Model</span> model<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// @RequestParam:</span>\\n    <span class=\\\"token comment\\\">// 1. 不加这个注解的话，只有参数名一致(地址栏和形参)，才能接收到e</span>\\n    <span class=\\\"token comment\\\">// 2. 改变请求参数的名字，@RequestParam(\\\"username\\\") String name</span>\\n    <span class=\\\"token comment\\\">// 3. 前端传递的参数必须是username，是name都会报错</span>\\n\\n    <span class=\\\"token comment\\\">// 1. 接收前端参数</span>\\n    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"接收到前端的参数为：\\\"</span> <span class=\\\"token operator\\\">+</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 2. 将结果返回给前端，Model</span>\\n    model<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"msg\\\"</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 3. 视图跳转</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"test\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">// 前端参数是一个对象</span>\\n  <span class=\\\"token comment\\\">// localhost:8080/user/t2?id=xxx&amp;name=xxx&amp;age=xxx</span>\\n  <span class=\\\"token comment\\\">// 要求前端传递的参数和方法中的形参，字段都必须保持一致，否则不一致的字段会为null</span>\\n  <span class=\\\"token annotation punctuation\\\">@GetMapping</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"/t2\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token function\\\">test2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">User</span> user<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">Model</span> model<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 1. 接收前端参数</span>\\n    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"接收到前端的参数为：\\\"</span> <span class=\\\"token operator\\\">+</span> user<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// User(id=12, name=null, age=18)</span>\\n    <span class=\\\"token comment\\\">// 2. 将结果返回给前端，Model</span>\\n    model<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"msg\\\"</span><span class=\\\"token punctuation\\\">,</span> user<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 3. 视图跳转</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"test\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">/*\\n  数据处理有3种方式:\\n  1. ModelAndView(继承Controller常用)：存储数据的同时可以设置视图逻辑，控制展示层的跳转\\n  2. Model(注解常用)：只适用于存储数据(最常用)\\n  3. ModelMap：继承了LinkedMap，同时继承了LinkedMap的方法和特性\\n  */</span>\\n  <span class=\\\"token annotation punctuation\\\">@GetMapping</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"/t3\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token function\\\">test3</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ModelMap</span> map<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"test\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
