import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/函数式组件与类式组件.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"函数式组件与类式组件\",\"slug\":\"函数式组件与类式组件\",\"link\":\"#函数式组件与类式组件\",\"children\":[{\"level\":3,\"title\":\"函数式组件的定义\",\"slug\":\"函数式组件的定义\",\"link\":\"#函数式组件的定义\",\"children\":[]},{\"level\":3,\"title\":\"类式组件\",\"slug\":\"类式组件\",\"link\":\"#类式组件\",\"children\":[]},{\"level\":3,\"title\":\"复杂组件\",\"slug\":\"复杂组件\",\"link\":\"#复杂组件\",\"children\":[]}]}],\"git\":{\"updatedTime\":1727684271000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":2}]},\"filePathRelative\":\"web/React/函数式组件与类式组件.md\",\"excerpt\":\"<h2>函数式组件与类式组件</h2>\\n<h3>函数式组件的定义</h3>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// 1.创建类式组件</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// render是放在哪里的?-MyComponent的原型对象上，供实例使用。</span>\\n    <span class=\\\"token comment\\\">// render中的this是谁?-MyComponent的实例对象&lt;=&gt;MyComponent组件实例对象。</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render中的this:\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>h2<span class=\\\"token operator\\\">&gt;</span><span class=\\\"token function\\\">我是用类定义的组件</span><span class=\\\"token punctuation\\\">(</span>适用于<span class=\\\"token punctuation\\\">[</span>复杂组件<span class=\\\"token punctuation\\\">]</span>的定义<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">&gt;</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 2.渲染组件到页面</span>\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>MyComponent <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">&gt;</span><span class=\\\"token punctuation\\\">,</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"test\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/*\\n执行了ReactDOM.render(&lt;MyComponent/&gt;......之后，发生了什么?\\n1.React解析组件标签，找到了MyComponent组件。\\n2.发现组件是使用类定义的,随后new出来该类的实例,并通过该实例调用到原型上的render方法。\\n3.将render返回的虚拟DOM转为真实DOM，随后呈现在页面中。\\n*/</span>\\n</code></pre></div>\"}")
export { comp, data }
