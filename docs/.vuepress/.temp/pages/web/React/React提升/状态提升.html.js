import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/React提升/状态提升.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/React%E6%8F%90%E5%8D%87/%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"状态提升（Lifting State Up）\",\"slug\":\"状态提升-lifting-state-up\",\"link\":\"#状态提升-lifting-state-up\",\"children\":[{\"level\":3,\"title\":\"1. 定义状态\",\"slug\":\"_1-定义状态\",\"link\":\"#_1-定义状态\",\"children\":[]},{\"level\":3,\"title\":\"2. 子组件访问状态\",\"slug\":\"_2-子组件访问状态\",\"link\":\"#_2-子组件访问状态\",\"children\":[]},{\"level\":3,\"title\":\"3. 更新状态\",\"slug\":\"_3-更新状态\",\"link\":\"#_3-更新状态\",\"children\":[]},{\"level\":3,\"title\":\"4. 子组件的独立状态\",\"slug\":\"_4-子组件的独立状态\",\"link\":\"#_4-子组件的独立状态\",\"children\":[]},{\"level\":3,\"title\":\"5. 状态提升的适用场景\",\"slug\":\"_5-状态提升的适用场景\",\"link\":\"#_5-状态提升的适用场景\",\"children\":[]},{\"level\":3,\"title\":\"6. 避免过度提升状态\",\"slug\":\"_6-避免过度提升状态\",\"link\":\"#_6-避免过度提升状态\",\"children\":[]},{\"level\":3,\"title\":\"7. 状态提升与 Context API\",\"slug\":\"_7-状态提升与-context-api\",\"link\":\"#_7-状态提升与-context-api\",\"children\":[]},{\"level\":3,\"title\":\"8. 状态提升与性能\",\"slug\":\"_8-状态提升与性能\",\"link\":\"#_8-状态提升与性能\",\"children\":[]}]}],\"git\":{\"updatedTime\":1728487189000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/React/React提升/状态提升.md\",\"excerpt\":\"<!-- @format -->\\n<h2>状态提升（Lifting State Up）</h2>\\n<p>状态提升是 React 中用于管理多个组件间共享状态的模式。当多个组件需要访问同一个状态时，你可以将这个状态提升到它们共同的父组件中。状态提升是一种简单有效的状态管理方式，适用于多个组件需要访问共享状态的场景。然而，随着应用规模的增长，可能需要考虑使用更强大的状态管理解决方案。</p>\\n<h3>1. 定义状态</h3>\\n<p>在父组件中定义一个状态，并通过 props 将其传递给子组件。</p>\\n<div class=\\\"language-jsx\\\" data-ext=\\\"jsx\\\" data-title=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ParentComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">sharedState</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ChildComponentA</span></span> <span class=\\\"token attr-name\\\">sharedState</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>sharedState<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ChildComponentB</span></span> <span class=\\\"token attr-name\\\">sharedState</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>sharedState<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
