import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/React提升/Hooks/useMemo和useCallback.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/React%E6%8F%90%E5%8D%87/Hooks/useMemo%E5%92%8CuseCallback.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"useMemo 和 useCallback\",\"slug\":\"usememo-和-usecallback\",\"link\":\"#usememo-和-usecallback\",\"children\":[{\"level\":3,\"title\":\"useMemo\",\"slug\":\"usememo\",\"link\":\"#usememo\",\"children\":[]},{\"level\":3,\"title\":\"1. 基本使用\",\"slug\":\"_1-基本使用\",\"link\":\"#_1-基本使用\",\"children\":[]},{\"level\":3,\"title\":\"2. 依赖数组\",\"slug\":\"_2-依赖数组\",\"link\":\"#_2-依赖数组\",\"children\":[]},{\"level\":3,\"title\":\"3. 避免不必要的计算\",\"slug\":\"_3-避免不必要的计算\",\"link\":\"#_3-避免不必要的计算\",\"children\":[]},{\"level\":3,\"title\":\"4. 惰性计算\",\"slug\":\"_4-惰性计算\",\"link\":\"#_4-惰性计算\",\"children\":[]},{\"level\":3,\"title\":\"5. 与useMemo结合使用\",\"slug\":\"_5-与usememo结合使用\",\"link\":\"#_5-与usememo结合使用\",\"children\":[]},{\"level\":3,\"title\":\"useCallback\",\"slug\":\"usecallback\",\"link\":\"#usecallback\",\"children\":[]},{\"level\":3,\"title\":\"1. 基本使用\",\"slug\":\"_1-基本使用-1\",\"link\":\"#_1-基本使用-1\",\"children\":[]},{\"level\":3,\"title\":\"2. 依赖数组\",\"slug\":\"_2-依赖数组-1\",\"link\":\"#_2-依赖数组-1\",\"children\":[]},{\"level\":3,\"title\":\"3. 避免不必要的渲染\",\"slug\":\"_3-避免不必要的渲染\",\"link\":\"#_3-避免不必要的渲染\",\"children\":[]},{\"level\":3,\"title\":\"4. 稳定性\",\"slug\":\"_4-稳定性\",\"link\":\"#_4-稳定性\",\"children\":[]},{\"level\":3,\"title\":\"5. 自定义 Hook\",\"slug\":\"_5-自定义-hook\",\"link\":\"#_5-自定义-hook\",\"children\":[]},{\"level\":3,\"title\":\"6. 与useMemo的区别\",\"slug\":\"_6-与usememo的区别\",\"link\":\"#_6-与usememo的区别\",\"children\":[]},{\"level\":3,\"title\":\"7. 性能注意事项\",\"slug\":\"_7-性能注意事项\",\"link\":\"#_7-性能注意事项\",\"children\":[]},{\"level\":3,\"title\":\"8. 与React.memo结合使用\",\"slug\":\"_8-与react-memo结合使用\",\"link\":\"#_8-与react-memo结合使用\",\"children\":[]},{\"level\":3,\"title\":\"9. 惰性初始化\",\"slug\":\"_9-惰性初始化\",\"link\":\"#_9-惰性初始化\",\"children\":[]},{\"level\":3,\"title\":\"10. 避免深比较\",\"slug\":\"_10-避免深比较\",\"link\":\"#_10-避免深比较\",\"children\":[]},{\"level\":3,\"title\":\"11. 避免在渲染阶段使用\",\"slug\":\"_11-避免在渲染阶段使用\",\"link\":\"#_11-避免在渲染阶段使用\",\"children\":[]}]}],\"git\":{\"updatedTime\":1728487189000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/React/React提升/Hooks/useMemo和useCallback.md\",\"excerpt\":\"<!-- @format -->\\n<h2>useMemo 和 useCallback</h2>\\n<p><code>useMemo</code> 和 <code>useCallback</code> 是 React 提供的两个 Hook，用于优化性能，它们通过记忆化来避免不必要的计算和渲染。以下是这两个 Hook 的关键技术点和概念：</p>\\n<h3><code>useMemo</code></h3>\\n<h3>1. 基本使用</h3>\\n<p><code>useMemo</code> 用于对高开销的计算进行记忆化，以优化性能。</p>\\n<div class=\\\"language-jsx\\\" data-ext=\\\"jsx\\\" data-title=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useMemo <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">expensiveCalculation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">x<span class=\\\"token punctuation\\\">,</span> y</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 假设这是一个复杂的计算</span>\\n  <span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> y<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">,</span> y <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useMemo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token function\\\">expensiveCalculation</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">Result: </span><span class=\\\"token punctuation\\\">{</span>result<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
