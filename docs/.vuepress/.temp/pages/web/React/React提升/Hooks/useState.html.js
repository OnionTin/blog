import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/React提升/Hooks/useState.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/React%E6%8F%90%E5%8D%87/Hooks/useState.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"useState\",\"slug\":\"usestate\",\"link\":\"#usestate\",\"children\":[{\"level\":3,\"title\":\"1. 基本使用\",\"slug\":\"_1-基本使用\",\"link\":\"#_1-基本使用\",\"children\":[]},{\"level\":3,\"title\":\"2. 初始状态\",\"slug\":\"_2-初始状态\",\"link\":\"#_2-初始状态\",\"children\":[]},{\"level\":3,\"title\":\"3. 更新状态\",\"slug\":\"_3-更新状态\",\"link\":\"#_3-更新状态\",\"children\":[]},{\"level\":3,\"title\":\"4. 函数作为参数\",\"slug\":\"_4-函数作为参数\",\"link\":\"#_4-函数作为参数\",\"children\":[]},{\"level\":3,\"title\":\"5. 多状态变量\",\"slug\":\"_5-多状态变量\",\"link\":\"#_5-多状态变量\",\"children\":[]},{\"level\":3,\"title\":\"6. 状态惰性初始化\",\"slug\":\"_6-状态惰性初始化\",\"link\":\"#_6-状态惰性初始化\",\"children\":[]},{\"level\":3,\"title\":\"7. 使用状态进行数据提交\",\"slug\":\"_7-使用状态进行数据提交\",\"link\":\"#_7-使用状态进行数据提交\",\"children\":[]},{\"level\":3,\"title\":\"8. 状态与副作用\",\"slug\":\"_8-状态与副作用\",\"link\":\"#_8-状态与副作用\",\"children\":[]},{\"level\":3,\"title\":\"9. 自定义 Hook\",\"slug\":\"_9-自定义-hook\",\"link\":\"#_9-自定义-hook\",\"children\":[]},{\"level\":3,\"title\":\"10. 状态的不可变性\",\"slug\":\"_10-状态的不可变性\",\"link\":\"#_10-状态的不可变性\",\"children\":[]},{\"level\":3,\"title\":\"11. 状态的依赖性\",\"slug\":\"_11-状态的依赖性\",\"link\":\"#_11-状态的依赖性\",\"children\":[]}]}],\"git\":{\"updatedTime\":1728487189000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/React/React提升/Hooks/useState.md\",\"excerpt\":\"<!-- @format -->\\n<h2>useState</h2>\\n<blockquote>\\n<p>useState 是最基本的 Hook，它允许你在函数组件中添加局部状态。useState 接受一个参数作为初始状态，并返回一个数组，其中第一个元素是当前状态，第二个元素是一个函数，用于更新状态。</p>\\n</blockquote>\\n<h3>1. 基本使用</h3>\\n<p><code>useState</code>允许你在函数组件中创建一个状态变量和一个更新该状态的函数。</p>\\n<div class=\\\"language-jsx\\\" data-ext=\\\"jsx\\\" data-title=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Example</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 初始状态为0</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">You clicked </span><span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\"> times</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">Click me</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
