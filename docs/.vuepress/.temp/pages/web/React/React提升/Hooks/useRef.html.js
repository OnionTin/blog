import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/React提升/Hooks/useRef.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/React%E6%8F%90%E5%8D%87/Hooks/useRef.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"useRef\",\"slug\":\"useref\",\"link\":\"#useref\",\"children\":[{\"level\":3,\"title\":\"1. 基本使用\",\"slug\":\"_1-基本使用\",\"link\":\"#_1-基本使用\",\"children\":[]},{\"level\":3,\"title\":\"2. 访问 DOM 元素\",\"slug\":\"_2-访问-dom-元素\",\"link\":\"#_2-访问-dom-元素\",\"children\":[]},{\"level\":3,\"title\":\"3. 初始值\",\"slug\":\"_3-初始值\",\"link\":\"#_3-初始值\",\"children\":[]},{\"level\":3,\"title\":\"4. 保存可变值\",\"slug\":\"_4-保存可变值\",\"link\":\"#_4-保存可变值\",\"children\":[]},{\"level\":3,\"title\":\"5. 传递回调函数\",\"slug\":\"_5-传递回调函数\",\"link\":\"#_5-传递回调函数\",\"children\":[]},{\"level\":3,\"title\":\"6. 组合使用\",\"slug\":\"_6-组合使用\",\"link\":\"#_6-组合使用\",\"children\":[]},{\"level\":3,\"title\":\"7. 清除 Ref\",\"slug\":\"_7-清除-ref\",\"link\":\"#_7-清除-ref\",\"children\":[]},{\"level\":3,\"title\":\"8. 多个 Ref\",\"slug\":\"_8-多个-ref\",\"link\":\"#_8-多个-ref\",\"children\":[]},{\"level\":3,\"title\":\"9. 与类组件的区别\",\"slug\":\"_9-与类组件的区别\",\"link\":\"#_9-与类组件的区别\",\"children\":[]},{\"level\":3,\"title\":\"10. Refs 与 Context\",\"slug\":\"_10-refs-与-context\",\"link\":\"#_10-refs-与-context\",\"children\":[]},{\"level\":3,\"title\":\"11. Refs 与 forwardRef\",\"slug\":\"_11-refs-与-forwardref\",\"link\":\"#_11-refs-与-forwardref\",\"children\":[]},{\"level\":3,\"title\":\"12. Refs 与 useImperativeHandle\",\"slug\":\"_12-refs-与-useimperativehandle\",\"link\":\"#_12-refs-与-useimperativehandle\",\"children\":[]},{\"level\":3,\"title\":\"13. 调试\",\"slug\":\"_13-调试\",\"link\":\"#_13-调试\",\"children\":[]}]}],\"git\":{\"updatedTime\":1728487189000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/React/React提升/Hooks/useRef.md\",\"excerpt\":\"<!-- @format -->\\n<h2>useRef</h2>\\n<p><code>useRef</code> 是 React 提供的 Hook，用于在函数组件中访问 DOM 元素、管理内部状态或保存任何可变值。</p>\\n<h3>1. 基本使用</h3>\\n<p><code>useRef</code> 创建一个可变的 ref 对象，它在整个组件生命周期内持续存在。</p>\\n<div class=\\\"language-jsx\\\" data-ext=\\\"jsx\\\" data-title=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useRef <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> myRef <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>myRef<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">Hello</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
