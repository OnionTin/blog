import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/React提升/props.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/React%E6%8F%90%E5%8D%87/props.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"props\",\"slug\":\"props\",\"link\":\"#props\",\"children\":[{\"level\":3,\"title\":\"1. 单向数据流\",\"slug\":\"_1-单向数据流\",\"link\":\"#_1-单向数据流\",\"children\":[]},{\"level\":3,\"title\":\"2. 组件通信\",\"slug\":\"_2-组件通信\",\"link\":\"#_2-组件通信\",\"children\":[]},{\"level\":3,\"title\":\"3. 读取 Props\",\"slug\":\"_3-读取-props\",\"link\":\"#_3-读取-props\",\"children\":[]},{\"level\":3,\"title\":\"4. 传递复杂数据\",\"slug\":\"_4-传递复杂数据\",\"link\":\"#_4-传递复杂数据\",\"children\":[]},{\"level\":3,\"title\":\"5. 默认 Props\",\"slug\":\"_5-默认-props\",\"link\":\"#_5-默认-props\",\"children\":[]},{\"level\":3,\"title\":\"6. Props 类型检查\",\"slug\":\"_6-props-类型检查\",\"link\":\"#_6-props-类型检查\",\"children\":[]},{\"level\":3,\"title\":\"7. 传递子组件\",\"slug\":\"_7-传递子组件\",\"link\":\"#_7-传递子组件\",\"children\":[]},{\"level\":3,\"title\":\"8. 内联函数\",\"slug\":\"_8-内联函数\",\"link\":\"#_8-内联函数\",\"children\":[]},{\"level\":3,\"title\":\"9. Props 解构\",\"slug\":\"_9-props-解构\",\"link\":\"#_9-props-解构\",\"children\":[]},{\"level\":3,\"title\":\"10. 组合组件\",\"slug\":\"_10-组合组件\",\"link\":\"#_10-组合组件\",\"children\":[]},{\"level\":3,\"title\":\"11. Props.frozen\",\"slug\":\"_11-props-frozen\",\"link\":\"#_11-props-frozen\",\"children\":[]},{\"level\":3,\"title\":\"12. 访问 props 的 children\",\"slug\":\"_12-访问-props-的-children\",\"link\":\"#_12-访问-props-的-children\",\"children\":[]},{\"level\":3,\"title\":\"13. 使用 Context API 传递 props\",\"slug\":\"_13-使用-context-api-传递-props\",\"link\":\"#_13-使用-context-api-传递-props\",\"children\":[]}]}],\"git\":{\"updatedTime\":1728487189000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/React/React提升/props.md\",\"excerpt\":\"<!-- @format -->\\n<h2>props</h2>\\n<p>在 React 中，组件间的数据传递是通过属性（通常称为 props）来实现的。</p>\\n<h3>1. 单向数据流</h3>\\n<p>Props 是 React 中实现单向数据流的方式，确保数据在组件树中自上而下流动。</p>\\n<h3>2. 组件通信</h3>\\n<p>Props 用于父组件向子组件传递数据。</p>\\n<div class=\\\"language-jsx\\\" data-ext=\\\"jsx\\\" data-title=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ParentComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> message <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Hello from parent'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ChildComponent</span></span> <span class=\\\"token attr-name\\\">message</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>message<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
