import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/React/React提升/组件/组件的组合.html.vue"
const data = JSON.parse("{\"path\":\"/web/React/React%E6%8F%90%E5%8D%87/%E7%BB%84%E4%BB%B6/%E7%BB%84%E4%BB%B6%E7%9A%84%E7%BB%84%E5%90%88.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"组件的组合\",\"slug\":\"组件的组合\",\"link\":\"#组件的组合\",\"children\":[{\"level\":3,\"title\":\"1. 组合基础\",\"slug\":\"_1-组合基础\",\"link\":\"#_1-组合基础\",\"children\":[]},{\"level\":3,\"title\":\"2. Props 传递\",\"slug\":\"_2-props-传递\",\"link\":\"#_2-props-传递\",\"children\":[]},{\"level\":3,\"title\":\"3. 子组件组合\",\"slug\":\"_3-子组件组合\",\"link\":\"#_3-子组件组合\",\"children\":[]},{\"level\":3,\"title\":\"4. 条件渲染\",\"slug\":\"_4-条件渲染\",\"link\":\"#_4-条件渲染\",\"children\":[]},{\"level\":3,\"title\":\"5. 列表渲染\",\"slug\":\"_5-列表渲染\",\"link\":\"#_5-列表渲染\",\"children\":[]},{\"level\":3,\"title\":\"6. Fragments\",\"slug\":\"_6-fragments\",\"link\":\"#_6-fragments\",\"children\":[]},{\"level\":3,\"title\":\"7. 高阶组件（HOC）\",\"slug\":\"_7-高阶组件-hoc\",\"link\":\"#_7-高阶组件-hoc\",\"children\":[]},{\"level\":3,\"title\":\"8. Context API\",\"slug\":\"_8-context-api\",\"link\":\"#_8-context-api\",\"children\":[]},{\"level\":3,\"title\":\"9. 组件的封装和复用\",\"slug\":\"_9-组件的封装和复用\",\"link\":\"#_9-组件的封装和复用\",\"children\":[]},{\"level\":3,\"title\":\"10. 组件的拆分\",\"slug\":\"_10-组件的拆分\",\"link\":\"#_10-组件的拆分\",\"children\":[]},{\"level\":3,\"title\":\"11. 组件之间的通信\",\"slug\":\"_11-组件之间的通信\",\"link\":\"#_11-组件之间的通信\",\"children\":[]},{\"level\":3,\"title\":\"12. 组件的性能优化\",\"slug\":\"_12-组件的性能优化\",\"link\":\"#_12-组件的性能优化\",\"children\":[]}]}],\"git\":{\"updatedTime\":1728487189000,\"contributors\":[{\"name\":\"OnionTin]\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/React/React提升/组件/组件的组合.md\",\"excerpt\":\"<!-- @format -->\\n<h2>组件的组合</h2>\\n<p>组件组合是 React 中的核心概念之一，它允许你将复杂的 UI 分解成独立可复用的组件。</p>\\n<h3>1. 组合基础</h3>\\n<p>在 React 中，组件可以嵌套组合，子组件可以接收来自父组件的 props。</p>\\n<div class=\\\"language-jsx\\\" data-ext=\\\"jsx\\\" data-title=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Welcome</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token plain-text\\\">Hello, </span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Welcome</span></span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Kimi<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
