import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/Ts/类型操作/泛型.html.vue"
const data = JSON.parse("{\"path\":\"/web/Ts/%E7%B1%BB%E5%9E%8B%E6%93%8D%E4%BD%9C/%E6%B3%9B%E5%9E%8B.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"泛型\",\"slug\":\"泛型\",\"link\":\"#泛型\",\"children\":[{\"level\":3,\"title\":\"泛型函数\",\"slug\":\"泛型函数\",\"link\":\"#泛型函数\",\"children\":[]},{\"level\":3,\"title\":\"泛型接口\",\"slug\":\"泛型接口\",\"link\":\"#泛型接口\",\"children\":[]},{\"level\":3,\"title\":\"泛型类\",\"slug\":\"泛型类\",\"link\":\"#泛型类\",\"children\":[]},{\"level\":3,\"title\":\"泛型约束\",\"slug\":\"泛型约束\",\"link\":\"#泛型约束\",\"children\":[]},{\"level\":3,\"title\":\"泛型类型别名\",\"slug\":\"泛型类型别名\",\"link\":\"#泛型类型别名\",\"children\":[]},{\"level\":3,\"title\":\"泛型元组\",\"slug\":\"泛型元组\",\"link\":\"#泛型元组\",\"children\":[]},{\"level\":3,\"title\":\"泛型工具类型\",\"slug\":\"泛型工具类型\",\"link\":\"#泛型工具类型\",\"children\":[]},{\"level\":3,\"title\":\"Partial<T>\",\"slug\":\"partial-t\",\"link\":\"#partial-t\",\"children\":[]},{\"level\":3,\"title\":\"Readonly<T>\",\"slug\":\"readonly-t\",\"link\":\"#readonly-t\",\"children\":[]},{\"level\":3,\"title\":\"Pick<T, K>\",\"slug\":\"pick-t-k\",\"link\":\"#pick-t-k\",\"children\":[]}]}],\"git\":{\"updatedTime\":1727429003000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":2}]},\"filePathRelative\":\"web/Ts/类型操作/泛型.md\",\"excerpt\":\"<h2>泛型</h2>\\n<blockquote>\\n<p>泛型是一种强大的工具，它允许你编写可重用的函数、接口和类，这些函数、接口和类可以操作多种类型的数据，而不会失去类型安全性。泛型在编译时提供类型检查，从而帮助你捕捉错误。</p>\\n</blockquote>\\n<h3>泛型函数</h3>\\n<blockquote>\\n<p>泛型函数可以接收任意类型的参数，并返回相同类型的结果。</p>\\n</blockquote>\\n<div class=\\\"language-typescript\\\" data-ext=\\\"ts\\\" data-title=\\\"ts\\\"><pre class=\\\"language-typescript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">identity</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">&gt;</span></span></span><span class=\\\"token punctuation\\\">(</span>arg<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> arg<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">identity</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token operator\\\">&gt;</span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// type is string</span>\\n<span class=\\\"token keyword\\\">const</span> resultNumber <span class=\\\"token operator\\\">=</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">identity</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">number</span><span class=\\\"token operator\\\">&gt;</span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">123</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// type is number</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
