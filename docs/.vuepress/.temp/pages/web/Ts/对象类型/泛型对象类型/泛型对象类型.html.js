import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/Ts/对象类型/泛型对象类型/泛型对象类型.html.vue"
const data = JSON.parse("{\"path\":\"/web/Ts/%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/%E6%B3%9B%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/%E6%B3%9B%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"泛型对象类型\",\"slug\":\"泛型对象类型\",\"link\":\"#泛型对象类型\",\"children\":[{\"level\":3,\"title\":\"定义泛型接口\",\"slug\":\"定义泛型接口\",\"link\":\"#定义泛型接口\",\"children\":[]},{\"level\":3,\"title\":\"泛型类型别名\",\"slug\":\"泛型类型别名\",\"link\":\"#泛型类型别名\",\"children\":[]},{\"level\":3,\"title\":\"使用泛型类\",\"slug\":\"使用泛型类\",\"link\":\"#使用泛型类\",\"children\":[]},{\"level\":3,\"title\":\"泛型约束\",\"slug\":\"泛型约束\",\"link\":\"#泛型约束\",\"children\":[]}]}],\"git\":{\"updatedTime\":1727429003000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":2}]},\"filePathRelative\":\"web/Ts/对象类型/泛型对象类型/泛型对象类型.md\",\"excerpt\":\"<h2>泛型对象类型</h2>\\n<blockquote>\\n<p>泛型允许你创建可重用的组件，这意味着你可以为函数、接口和类创建通用的定义，然后在使用时指定具体的类型。泛型在定义对象类型时非常有用，因为它们允许你定义具有一个或多个任意类型属性的对象。</p>\\n</blockquote>\\n<h3>定义泛型接口</h3>\\n<blockquote>\\n<p>可以使用泛型来定义接口，这样可以确保对象的类型在编译时就是正确的。</p>\\n</blockquote>\\n<div class=\\\"language-typescript\\\" data-ext=\\\"ts\\\" data-title=\\\"ts\\\"><pre class=\\\"language-typescript\\\"><code><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">GenericObject<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">&gt;</span></span> <span class=\\\"token punctuation\\\">{</span>\\n  id<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">;</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> user<span class=\\\"token operator\\\">:</span> GenericObject<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">number</span><span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  id<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Alice\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> product<span class=\\\"token operator\\\">:</span> GenericObject<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  id<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"P123\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Laptop\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
