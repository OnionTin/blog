import comp from "D:/Programs/web/blog/docs/.vuepress/.temp/pages/web/Ts/关于函数/剩余形参.html.vue"
const data = JSON.parse("{\"path\":\"/web/Ts/%E5%85%B3%E4%BA%8E%E5%87%BD%E6%95%B0/%E5%89%A9%E4%BD%99%E5%BD%A2%E5%8F%82.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"剩余形参\",\"slug\":\"剩余形参\",\"link\":\"#剩余形参\",\"children\":[{\"level\":3,\"title\":\"剩余形参\",\"slug\":\"剩余形参-1\",\"link\":\"#剩余形参-1\",\"children\":[]},{\"level\":3,\"title\":\"剩余实参\",\"slug\":\"剩余实参\",\"link\":\"#剩余实参\",\"children\":[]}]}],\"git\":{\"updatedTime\":1727255714000,\"contributors\":[{\"name\":\"OnionTin\",\"email\":\"2775376881@qq.com\",\"commits\":1}]},\"filePathRelative\":\"web/Ts/关于函数/剩余形参.md\",\"excerpt\":\"<h2>剩余形参</h2>\\n<blockquote>\\n<p>剩余参数（Rest Parameters）是一种函数参数的高级用法，它允许你将一个不确定数量的参数表示为一个数组。这在处理函数调用时非常有用，特别是当你需要传递任意数量的参数时。</p>\\n</blockquote>\\n<h3>剩余形参</h3>\\n<blockquote>\\n<p>剩余形参使用三个点 ... 开头，它出现在函数参数列表的最后，用于收集所有剩余的参数。sum 函数使用剩余形参 ...numbers 来收集所有传递给它的数字，并使用 reduce 方法计算总和。</p>\\n</blockquote>\\n<div class=\\\"language-typescript\\\" data-ext=\\\"ts\\\" data-title=\\\"ts\\\"><pre class=\\\"language-typescript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sum</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>numbers<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> numbers<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>acc<span class=\\\"token punctuation\\\">,</span> curr<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> acc <span class=\\\"token operator\\\">+</span> curr<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token builtin\\\">console</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">sum</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 输出: 15</span>\\n</code></pre></div>\"}")
export { comp, data }
